#                  _             _     ____   ___ __________
#  _ __  _ __ __ _| | ____ _ ___| |__ |___ \ / _ \___ /___ /
# | '_ \| '__/ _` | |/ / _` / __| '_ \  __) | | | ||_ \ |_ \
# | |_) | | | (_| |   < (_| \__ \ | | |/ __/| |_| |__) |__) |
# | .__/|_|  \__,_|_|\_\__,_|___/_| |_|_____|\___/____/____/
# |_|
#
#       DESC: ZSH/BASH Compatible Alias/Functions
#
#       http://www.youtube.com/user/vickykits71
#       https://twitter.com/prakash2033
#       https://github.com/prakash2033

#-------- Load PATHS{{{

[ -f "$HOME/.config/privatekey/privatekeyrc" ] && source "$HOME/.config/privatekey/privatekeyrc"
[ -d "$HOME/.scripts" ] && PATH="$HOME/.scripts:$PATH"
[ -d "$HOME/.cargo/env" ] && PATH="$HOME/.cargo/env:$PATH"
[ -d "/usr/sbin" ] && PATH="/usr/sbin:$PATH"
[ -d "$HOME/Public/gitrepo/diff-so-fancy" ] && PATH="$HOME/Public/gitrepo/diff-so-fancy:$PATH"
[ -d "$HOME/.local/bin" ] && PATH="$HOME/.local/bin:$PATH"
[ -d "$HOME/.dotnet" ] && PATH="$HOME/.dotnet:$PATH"
[ -d "$HOME/.privatescripts" ] && PATH="$HOME/.privatescripts:$PATH"
[ -d "$HOME/.binjutsu/x86_64" ] && PATH="$HOME/.binjutsu/x86_64:$PATH"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# }}}
#-------- Exports {{{
#------------------------------------------------------
# Node Version Manager
export NVM_DIR="$HOME/.nvm"
# Go Packages (Golang)
export GOPATH=~/.go
export PATH="$PATH:$GOPATH/bin"
# Dotnet
export DOTNET_ROOT="$HOME/.dotnet"
export DOTNET_CLI_TELEMETRY_OPTOUT="true"
# no line wrapping in less
export LESS=$LESS" -S"

## custom w3m hotkeys
export W3M_HOTKEY_OPTIONS=':O'
export W3M_HOTKEY_LINK_BEGIN='f'
export W3M_HOTKEY_RELOAD='r'

# set display
# export DISPLAY=:0

# set 256color support (doesnt work with older apps like abook)
export TERM="screen-256color"
# export TERM="xterm-256color"

# fix vlc no video issue
export VDPAU_DRIVER=va_gl

# set current operating system
case "$(uname -s)" in
    Linux*)     export OS=Linux    ;;
    Darwin*)    export OS=Mac      ;;
    CYGWIN*)    export OS=Windows  ;;
    MINGW*)     export OS=Windows  ;;
    *)          export OS="UNKNOWN:$(uname -s)"
esac

#}}}
#-------- Set Default Programs {{{
#------------------------------------------------------
# DESC: check and choose the first program in the array that is installed as the default

# find alternative apps if it is installed on your system
find_alt() { for i;do which "$i" >/dev/null && { echo "$i"; return 0;};done;return 1; }

# set the default program
# the first program in the array that is detected on your system will be chosen as the default
export OPENER=$(find_alt open cygstart xdg-open exo-open gnome-open )
export BROWSER=$(find_alt chromium chromium-browser qutebrowser google-chrome firefox $OPENER )
export BROWSERCLI=$(find_alt w3m links2 links lynx elinks $OPENER )
export BROWSERTOR=$(find_alt tor-browser-en)
export BROWSER_PRIVATE="chromium --incognito"
# export BROWSERCLI_IMAGE="w3m /usr/lib/w3m/cgi-bin/treat_as_url.cgi -o display_image=1 -o imgdisplay=w3mimgdisplay"
export BROWSERCLI_IMAGE="w3m -o display_image=1 -o imgdisplay=w3mimgdisplay"
export COMICER=$(find_alt mcomix comix zathura $OPENER )
export EBOOKER=$(find_alt ebook-viewer $OPENER )
export EDITOR=$(find_alt vim vi emacs nano leafpad gedit pluma $OPENER )
export EDITORGUI=$(find_alt mousepad leafpad gedit pluma $OPENER )
export WORDPROCESSOR=$(find_alt wordgrinder $OPENER )
export FILEMANAGER=$(find_alt pcmanfm thunar nautilus dolphin spacefm enlightenment_filemanager $OPENER )
export FILEMANAGERCLI=$(find_alt ranger vifm mc $OPENER )
export MUSICER=$(find_alt mpv mplayer mpg123 cvlc $OPENER )
export PAGER=$(find_alt less more most)
export PLAYER=$(find_alt mpv mplayer ffplay cvlc $OPENER )
export READER=$(find_alt mupdf zathura evince $OPENER )
export ROOTER=$(find_alt gksudo kdesudo )
# http://vim.wikia.com/wiki/Using_vim_as_a_man-page_viewer_under_Unix
# https://zameermanji.com/blog/2012/12/30/using-vim-as-manpager/
# https://vi.stackexchange.com/questions/4682/how-can-i-suppress-the-reading-from-stdin-message-from-within-vim
export MANPAGER="/bin/sh -c \"col -b | vim --not-a-term -c 'set ft=man ts=8 nomod nolist noma' -\""
# export MANPAGER="nvim +set\ filetype=man -"
# export MANWIDTH='100'
export URLPORTAL=~/.scripts/myurlportal
# export RTV_BROWSER=~/.scripts/urlportal.sh
export RTV_BROWSER=$URLPORTAL
export IMAGEVIEWER=$(find_alt sxiv feh ristretto display eog $OPENER )
export TTY_IMAGEVIEWER=fbi
export TTY_PLAYER=$(mpv -vo fbdev)
export QUEUER=$(find_alt tsp fq ts )
export TERMER=$(find_alt urxvt xterm uxterm termite sakura lxterminal terminator mate-terminal pantheon-terminal konsole gnome-terminal xfce4-terminal $OPENER )

# }}}
#-------- Configurations {{{
#------------------------------------------------------
cfg-abookrc() { $EDITOR ~/.abook/abookrc ;}
cfg-addressbook() { $EDITOR ~/.abook/addressbook ;}
cfg-alacritty() { $EDITOR ~/.config/alacritty/alacritty.yml ;}
cfg-awesomeapps() { $EDITOR ~/.config/awesome/configuration/apps.lua ;}
cfg-autostartrc() { $EDITOR ~/.autostartrc ;}
cfg-aria2() { $EDITOR ~/.config/aria2/aria2.conf ;}
cfg-bashrc() { $EDITOR ~/.bashrc ;}
cfg-blocklist() { $EDITOR ~/.scripts/blocklist.sh ;}
cfg-cava() { $EDITOR ~/.config/cava/config ;}
cfg-clonezilla() { sudo $EDITOR /etc/drbl/drbl.conf ;}
cfg-cheat() { $EDITOR ~/.config/cheat/conf.yml;}
cfg-cursor() { $EDITOR ~/.icons/default/index.theme ;}
cfg-cursor-list() { ls ~/.icons ;}
cfg-elinks() { $EDITOR ~/.elinks/elinks.conf ;}
cfg-emacs() { $EDITOR ~/.emacs ;}
cfg-fstab() { sudo $EDITOR /etc/fstab ;}
cfg-functionrc() { $EDITOR ~/.config/function/functionrc ;}
cfg-grub() { sudo $EDITOR /etc/default/grub ;}
cfg-gtkcss() { $EDITOR ~/.config/gtk-3.0/gtk.css ;}
cfg-hosts() { sudo $EDITOR /etc/hosts ;}
cfg-inputrc() { $EDITOR ~/.inputrc ;}
cfg-lf() { $EDITOR ~/.config/lf/lfrc ;}
cfg-mailcap() { $EDITOR ~/.mailcap ;}
cfg-mbsyncrc() { $EDITOR ~/.mbsyncrc ;}
cfg-mpv() { $EDITOR ~/.config/mpv/mpv.conf ;}
cfg-mpv-input() { $EDITOR ~/.config/mpv/input.conf ;}
cfg-muttrc() { $EDITOR ~/.muttrc ;}
cfg-nanorc() { $EDITOR ~/.nanorc;}
cfg-netrc() { $EDITOR ~/.netrc;}
cfg-networkmanager() { sudo $EDITOR /etc/NetworkManager/NetworkManager.conf ;}
cfg-newsboat() { $EDITOR ~/.newsboat/config ;}
cfg-newsboat-queue() { $EDITOR ~/.newsboat/queue ;}
cfg-newsboat-urls() { $EDITOR ~/.newsboat/urls ;}
cfg-nvim() { $EDITOR ~/.config/nvim/init.vim ;}
cfg-pacman() { sudo $EDITOR /etc/pacman.conf ;}
cfg-pacman-mirrorlist() { sudo $EDITOR /etc/pacman.d/mirrorlist ;}
cfg-pastebinit() { $EDITOR ~/.pastebinit.xml ;}
cfg-privatekeyrc() { $EDITOR ~/.config/privatekey/privatekeyrc ;}
cfg-profile() { $EDITOR ~/.profile ;}
cfg-pulseaudio() { sudo $EDITOR /etc/pulse/default.pa ;}
cfg-pyload() { $EDITOR ~/.pyload/pyload.conf ;}
cfg-pyradio() { $EDITOR ~/.pyradio/stations.csv ;}
cfg-qutebrowser() { $EDITOR ~/.config/qutebrowser/qutebrowser.conf ;}
cfg-qutebrowser-keys() { $EDITOR ~/.config/qutebrowser/keys.conf ;}
cfg-qutebrowser-quickmarks() { $EDITOR ~/.config/qutebrowser/quickmarks ;}
cfg-ranger() { $EDITOR ~/.config/ranger/rc.conf ;}
cfg-ranger-rifle() { $EDITOR ~/.config/ranger/rifle.conf ;}
cfg-ranger-commands() { $EDITOR ~/.config/ranger/commands.py ;}
cfg-rclua() { $EDITOR ~/.config/awesome/rc.lua ;}
cfg-redshift() { $EDITOR ~/.config/redshift/redshift.conf ;}
cfg-rtv() { $EDITOR ~/.config/rtv/rtv.cfg ;}
cfg-samba() { sudo $EDITOR /etc/samba/smb.conf ;}
cfg-sxhkdrc() { $EDITOR ~/.config/sxhkd/sxhkdrc ;}
cfg-sudoers() { sudo $EDITOR /etc/sudoers ;}
cfg-bookmarks() { $EDITOR ~/.config/surfraw/bookmarks ;}
cfg-surfraw() { $EDITOR ~/.config/surfraw/conf ;}
cfg-tmuxrc() { $EDITOR ~/.tmux.conf ;}
cfg-transmission-daemon() { $EDITOR ~/.config/transmission-daemon/settings.json ;}
cfg-transmission-ncurse() { $EDITOR ~/.config/transmission-remote-cli/settings.cfg ;}
cfg-transmission-tremc() { $EDITOR ~/.config/tremc/settings.cfg ;}
cfg-urlportal() { $EDITOR ~/.scripts/urlportal ;}
cfg-myurlportal() { $EDITOR ~/.scripts/myurlportal ;}
cfg-urlview() { $EDITOR ~/.urlview ;}
cfg-vifmrc() { $EDITOR ~/.config/vifm/vifmrc ;}
cfg-vimrc() { $EDITOR ~/.vimrc ;}
cfg-w3m() { $EDITOR ~/.w3m/config ;}
cfg-w3m-keymap() { $EDITOR ~/.w3m/keymap ;}
cfg-w3m-mailcap() { $EDITOR ~/.w3m/mailcap ;}
cfg-xbindkeysrc() { $EDITOR ~/.xbindkeysrc && killall xbindkeys ; xbindkeys ;}
cfg-xboxdrv() { sudo $EDITOR /etc/default/xboxdrv ;}
cfg-xmodmap() { $EDITOR ~/.Xmodmap ;}
cfg-xresources() { $EDITOR ~/.Xresources ;}
cfg-zshrc() { $EDITOR ~/.zshrc ;}

cfg-chromium-devtoolsize() { $EDITOR ~/.config/chromium/Default/User\ StyleSheets/Custom.css ;}
cfg-chromium-noscript() { $EDITOR ~/.config/chromium/Default/Extensions/odjhifogjcknibkahlpidmdajjpkkcfn/*/CHANGE__PASSWORD__HERE.js ;}
cfg-timidity() { sudo $EDITOR /etc/timidity++/timidity.cfg ;}
cfg-xdg-mine() { $EDITOR ~/.local/share/applications/mimeapps.list ;}

#}}}
#-------- Configurations Reload {{{
#------------------------------------------------------
rld-bashrc() { source ~/.bashrc ;}
rld-font() { fc-cache -v -f ;}
rld-grub() { sudo grub-mkconfig -o /boot/grub/grub.cfg ;}
rld-greenclip() { killall greenclip ; nohup greenclip daemon > /dev/null 2>&1 & }
rld-keynav() { killall keynav ; keynav daemonize ;}
rld-updatedb() { sudo updatedb ;}
rld-rawdog() { rawdog -Wuwv ;}
rld-xbindkeys() { killall xbindkeys ; xbindkeys ;}
rld-hyperkey() { xmodmap ~/.Xmodmap; killall xcape ; xcape -e 'Hyper_L=Return' ; killall xbindkeys ; xbindkeys ;}
rld-xcape() { killall xcape ; xcape -e 'Hyper_L=Return' ;}
rld-xdefaults() { xrdb ~/.Xdefaults ;}
rld-xmodmap() { xmodmap ~/.Xmodmap ;}
rld-xmodmap-uskeyboardlayout() { setxkbmap -layout us ;} # reset back to US keyboard http://unix.stackexchange.com/a/151046
rld-xresources() { xrdb -load ~/.Xresources ;}
rld-zshrc() { source ~/.zshrc ;}
rld-samba() { sudo systemctl restart nmb.service smb.service ;}
# }}}
#-------- Alias (Substitution) {{{
#------------------------------------------------------
# DESC: alias for mainly existing commands

# if [ -f "/usr/lib/w3m/cgi-bin/treat_as_url.cgi" ] ; then
#     alias w3m="w3m /usr/lib/w3m/cgi-bin/treat_as_url.cgi"
# fi
alias bc='bc -q -l'                 # dont show opening msg, use math library
# alias cal='cal -3 | grep --color -EC6 "\b$(date +%e | sed "s/ //g")"' # show calendar for 3 months
# alias cal='cal | grep --before-context 6 --after-context 6 --color -e " $(date +%e)" -e "^$(date +%e)"' # show calendar for 3 months
alias cal='cal -3 | grep -B6 -A6 --color -e " $(date +%e)" -e "^$(date +%e)"' # show calendar for 3 months
alias cp='cp -aiv'                  # cp prompt confirmation
alias df='df -hT --total | head -n 1 && df -hT --total | sed '1d' | sort'   # human readable, print filetype, and total
alias du='du -d1 -h'                    # max depth, human readable
alias emacs='emacs -nw'                 # cli mode
alias feh='feh --auto-zoom --scale-down -g 1360x768 -B white'
alias free='free -h'                    # human readable
alias info='info --vi-keys'             # GNU info act like man command
alias ln='ln -iv'
# alias lsblk='lsblk -o "TRAN,NAME,HOTPLUG,SIZE,FSTYPE,TYPE,LABEL,MOUNTPOINT,UUID,MODEL,SERIAL"'
alias mkdir='mkdir -p -v'               # create if not exist, verbose
alias mocp='padsp mocp'                                 # moc player working with pulseaudio
alias mount='mount | column -t'             # align in column
alias nano='nano -c -$'                 # word wrapping
# alias nvlc='nvlc --no-color'              # vlc black/white color
alias periscope='periscope -l en'           # get english subtitles
alias pdfgrep='pdfgrep -in'             # ignorecase, page number
alias qcp='qcp -f do'                                   # renameutils bulk copy (destination column only)
alias qmv='qmv -f do'                                   # renameutils bulk rename (destination column only)
alias rmdir='rmdir -v'                          # rm empty directory only
alias sr='sr -browser=$BROWSERCLI'          # open in cli browser
alias surfraw='surfraw -browser=$BROWSER'       # open in gui browser
alias wget='wget -N -c'                 # continues/resumes
alias ytv='youtube-viewer -7 --results=6 --video-player=mpv --append-arg="--ontop --no-border --force-window --autofit=500x280 --geometry=-15-53"' # color, fullscreen, 720p, number of results
alias yt='ytfzf -t -l'
alias u='urlportal'
alias v='vim'
alias visudo='sudo EDITOR="$EDITOR" visudo'

alias h='cd $HOME && la'
alias dox='cd ~/Documents'
alias dl='cd ~/Downloads'
alias px='cd ~/Pictures'
alias mu='cd ~/Music'
alias vv='cd ~/Videos'
alias sc='cd ~/.scripts'
alias cfg='cd ~/.config'

alias repo='cd ~/Public/gitrepo'
alias dot='cd ~/Public/gitrepo/dotfiles_v2'
alias notes='cd ~/Public/gitrepo/shownotes'
alias wiki='cd ~/Public/gitrepo/wiki'

alias dev='cd $HOME/dev'
alias code='cd $HOME/code'
alias tos='cd $HOME/dev/tote-tocc-tos'
alias tosnew='cd $HOME/dev/tote-tocc-tos-new'
alias label='cd $HOME/dev/tote-tocc-labelservice'
alias vin='cd $HOME/dev/tote-tocc-vin-service'
alias software='cd $HOME/dev/tote-tocc-softwareservice'
alias service='cd $HOME/dev/tote-tocc-services-ui'
alias notifi='cd $HOME/dev/tote-tocc-notificationservice'

alias derez='rm -Iv'                            # rm interactive, prompt once only
alias uhaul='mv -iv --'                 # mv prompt confirmation

# color for common commands
# tutorial video: http://www.youtube.com/watch?v=RbVCzxnKJL4
if [ -x /usr/bin/dircolors ]; then
    eval "`dircolors -b`"
    alias l='lsd'
    alias ls='lsd -a'
    alias ll='lsd -la'
    alias dir='dir --color=auto'
    alias vdir='vdir --color=auto'
    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

## }}}
#-------- Alias (Good List) {{{
#------------------------------------------------------
# DESC: custom alias

alias ..="cd .."
alias ...="cd ../.."
alias ....="cd ../../.."
alias .....="cd ../../../.."
alias ......="cd ../../../../.."
alias t="todo.sh"                                       # todotxt.sh program
alias trash='trash-put -v'
# alias vless="/usr/share/vim/vim81/macros/less.sh"       # vim as a pager
# alias vless="vim --not-a-term -c 'set nomod nolist noma' -"
alias vless="vim --not-a-term -c 'set nomod nolist' -"
# }}}
#-------- System Information {{{
#------------------------------------------------------
m-sound() { arecord -L && arecord -l && cat /proc/asound/pcm ;} #List audio capture card/mic

#}}}
# -------- Git {{{
alias ga='git add .'
alias gc='git commit'
alias gch='git checkout $(git branch | fzf)'
alias gD='git branch -D $(git branch | fzf)'
alias gd='git diff'
alias gds='git diff --staged'
alias gs='git status'
alias gp='git pull'
alias gps='git push'
alias glNoGraph='git log --color=always \
--format="%C(cyan)%h%Creset %C(blue)%ar%Creset%C(auto)%d%Creset \
%C(yellow)%s%+b %C(black)%ae%Creset" "$@"'

_gitLogLineToHash="echo {} |
grep -o '[a-f0-9]\{7\}' |
head -1"

_viewGitLogLine="$_gitLogLineToHash | 
xargs -I % sh -c 'git show --color=always % | 
diff-so-fancy'"

glog() {  # search for commit with preview and copy hash
  glNoGraph |
      fzf -i -e --no-sort --reverse \
          --tiebreak=index --no-multi \
          --ansi --preview="$_viewGitLogLine" \
          --header "enter: view, M-y: copy hash" \
          --bind "enter:execute:$_viewGitLogLine   |
          less -R" \
          --bind "alt-y:execute:$_gitLogLineToHash |
          xclip -r -selection clipboard"
}
# }}}

####################
##### INTERNET #####
####################

#-------- Yt-dlp (Stream|Download|RipAudio) {{{
#------------------------------------------------------
# DEMO: https://www.youtube.com/watch?v=MFxlwVhwayg
# DESC: download/stream media from many online sites
yt-dl-stream() { yt-dlp -o - "$1" | $PLAYER - ;}


yt-dl-best() { yt-dlp --restrict-filenames -f "bestvideo[ext=mp4]+bestaudio[ext=m4a]/bestvideo+bestaudio" -o "%(title)s.%(ext)s" "$@" ;}
alias yt-dl-thumbnail='yt-dl --write-thumbnail --skip-download '
alias yt-dl-480='yt-dlp -f "bestvideo[height<=480][ext=mp4]+bestaudio[ext=m4a]" '
alias yt-dl-720='yt-dlp -f "bestvideo[height<=720][ext=mp4]+bestaudio[ext=m4a]" '
alias yt-dl-4k='echo -e "This will transcode the video from webm to h264 which could take a long time\n\n"; yt-dlp -f "bestvideo[ext=webm]+bestaudio[ext=m4a]" --recode-video mp4 '
# alias yt-dl-mp3='yt-dlp --extract-audio -f bestaudio[ext=mp3] --no-playlist '
alias yt-dl-mp3='yt-dlp --ignore-errors --format bestaudio --extract-audio --audio-format mp3 --audio-quality 160K --output "%(title)s.%(ext)s"'


# DESC: convert youtube to audio (youtube.com only)
# -f 171 = webm audio (vorbis)
# -f 140 = m4a (aac)
yt2ogg() { yt-dlp --restrict-filenames -x --audio-format vorbis -o "%(title)s.%(ext)s" "$@" ;}
yt2wav() { yt-dlp --restrict-filenames -x --audio-format wav -o "%(title)s.%(ext)s" "$@" ;}
yt2mp3() { yt-dlp --restrict-filenames -x --audio-format mp3 -o "%(title)s.%(ext)s" "$@" ;}
yt2webmaudio() { yt-dlp --restrict-filenames -o "%(title)s.%(ext)s" -f 171 "$@" ;}
yt2m4a() { yt-dlp --restrict-filenames -o "%(title)s.%(ext)s" -f 140 "$@" ;}
yt2webm() { yt-dlp --restrict-filenames -o '%(title)s.%(ext)s' -f 248+251 "$@" ;}
yt2webmhighdesc() {
  GET_FORMAT=$(yt-dlp -F "$@" )
  VIDEO_ID=$(echo "$GET_FORMAT" | awk '/webm/ && /video only/ {print $1}' | tail -1)
  AUDIO_ID=$(echo "$GET_FORMAT" | awk '/webm/ && /audio only/ {print $1}' | tail -1)

  # yt-dlp -c --restrict-filenames -o '%(title)s.%(ext)s' -f 248+251 "$@" 
  yt-dlp -c --restrict-filenames -o '%(title)s.%(ext)s' -f "$VIDEO_ID"+"$AUDIO_ID" "$@" 
  TITLE=$(yt-dlp --get-title "$@")
  DURATION=$(yt-dlp --get-duration "$@")
  DESC=$(yt-dlp --get-description "$@")
  echo "$TITLE" >> "$TITLE".txt
  echo "$1" >> "$TITLE".txt
  echo "$DURATION" >> "$TITLE".txt
  echo "$DESC" >> "$TITLE".txt

}
yt2mp4highdesc() {
  GET_FORMAT=$(yt-dlp -F "$@" )
  VIDEO_ID=$(echo "$GET_FORMAT" | awk '/mp4/ && /video only/ {print $1}' | tail -1)
  AUDIO_ID=$(echo "$GET_FORMAT" | awk '/m4a/ && /audio only/ {print $1}' | tail -1)

  # yt-dlp -c --restrict-filenames -o '%(title)s.%(ext)s' -f 137+140 "$@" 
  yt-dlp -c --restrict-filenames -o '%(title)s.%(ext)s' -f "$VIDEO_ID"+"$AUDIO_ID" "$@" 
  TITLE=$(yt-dlp --get-title "$@")
  DURATION=$(yt-dlp --get-duration "$@")
  DESC=$(yt-dlp --get-description "$@")
  echo "$TITLE" >> "$TITLE".txt
  echo "$1" >> "$TITLE".txt
  echo "$DURATION" >> "$TITLE".txt
  echo "$DESC" >> "$TITLE".txt

}

# https://askubuntu.com/a/965815
yt2allwebm() {
  yt-dlp -i --all-subs --embed-subs --embed-thumbnail --add-metadata --merge-output-format webm --format 'bestvideo[ext=webm]+bestaudio[ext=webm]' "$@"
  TITLE=$(yt-dlp --get-title "$1")
  DESC=$(yt-dlp --get-duration --get-description "$1")
    echo "$TITLE\n$1\n\n$DESC" >> "$TITLE".txt
}
ytbackup() {
  # cat urllist.txt | while read -r line; do echo "$line"
  cat urllist.txt | while read -r line; do 
  yt-dlp -i --all-subs --embed-subs --embed-thumbnail --add-metadata --merge-output-format mp4 --format 'bestvideo[ext=mp4]+bestaudio[ext=m4a]' "$line"
  TITLE=$(yt-dlp --get-title "$line")
  DESC=$(yt-dlp --get-duration --get-description "$line")
    echo "$TITLE\n$1\n\n$DESC" >> "$TITLE".txt
  done
}
yt2allmp4() {
  yt-dlp -i --all-subs --embed-subs --embed-thumbnail --add-metadata --merge-output-format mp4 --format 'bestvideo[ext=mp4]+bestaudio[ext=m4a]' "$@"
  TITLE=$(yt-dlp --get-title "$1")
  DESC=$(yt-dlp --get-duration --get-description "$1")
    echo "$TITLE\n$1\n\n$DESC" >> "$TITLE".txt
}

# }}}
#-------- Skeet Skeet CLI {{{
# #------------------------------------------------------
# # requirements:
# #     1. install nohup mpv vim youtube-dl
# #     2. add this to your ~/.vimrc
# #        map <F8> :exec '!nohup mpv ' . shellescape(getline('.'), 1) . ' >/dev/null 2>&1&'<CR><CR>
# #
# # how to use:
# #     1. fap-xvideos ashlynn brooke
# #     2. hit F8 on the link you want to play
# #     3. hit ZZ or ZQ to quit vim

fap-youporn() {
  grepmatch=$(echo "$@" | sed 's/ /.*/g')
  keyword="$(echo "http://www.youporn.com/search?query=$@&type=straight" | sed 's/ /\+/g')"
  pagenum=3
  pagenum_to_url=$(for num in $(seq 1 "$pagenum"); do echo "$keyword&page=$num"; done )
  videourl=$(echo "$pagenum_to_url" | while read line; do lynx -dump "$line" \
  | awk '/watch/ {print $2}' | cut -d\/ -f1-6 | grep -iE $grepmatch | awk '!x[$0]++' ; done)
  echo $videourl | sed 's/\ /\n/g' | awk '!x[$0]++' | vim -R -
}

fap-youjizz() {
  keyword="$(echo "http://www.youjizz.com/search/$@" | sed 's/ /\-/g')"
  pagenum=5
  pagenum_to_url=$(for num in $(seq 1 "$pagenum"); do echo "$keyword-$num".html""; done )
  videourl=$(echo "$pagenum_to_url" | while read line; do lynx -dump "$line" \
  | awk '/\.com\/videos/ {print $2}' | awk '!x[$0]++' ; done)

  echo $videourl | sed 's/\ /\n/g' | awk '!x[$0]++' | vim -R -
}

fap-pornhub() {
  keyword="$(echo "https://www.pornhub.com/video/search?search=$@" | sed 's/ /\+/g')"
  pagenum=3
  pagenum_to_url=$(for num in $(seq 1 "$pagenum"); do echo "$keyword&page=$num"; done )
  videourl=$(echo "$pagenum_to_url" | while read line; do lynx -dump "$line" \
  | awk '/view_video/ {print $2}' | cut -d\" -f 2 |  awk '!x[$0]++' ; done)

  echo $videourl | sed 's/\ /\n/g' | awk '!x[$0]++' | vim -R -
}

fap-pornotube() {
  keyword="$(echo "http://www.pornotube.com/search.php?q=$@" | sed 's/ /\+/g')"
  pagenum=3
  pagenum_to_url=$(for num in $(seq 1 "$pagenum"); do echo "$keyword&page=$num"; done )
  videourl=$(echo "$pagenum_to_url" | while read line; do curl -s "$line" \
  | awk '/pornotube.com\/m/ && !/class/' | cut -d\" -f 2 | awk '!x[$0]++' ; done)

  echo $videourl | sed 's/\ /\n/g' | awk '!x[$0]++' | vim -R -
}

fap-xvideos() {
  keyword="$(echo "http://www.xvideos.com/?k=$@" | sed 's/ /\+/g')"
  pagenum=5
  pagenum_to_url=$(for num in $(seq 1 "$pagenum"); do echo "$keyword&p=$num"; done )
  videourl=$(echo "$pagenum_to_url" | while read line; do lynx -dump "$line" \
  | awk '/xvideos\.com\/video/ {print $2}' | awk '!x[$0]++' ; done)

  echo $videourl | sed 's/\ /\n/g' | awk '!x[$0]++' | vim -R -
}

fap-jizzhut() {
  keyword="$(echo "http://www.jizzhut.com/search/$@" | sed 's/ /\-/g')"
  pagenum=3
  pagenum_to_url=$(for num in $(seq 1 "$pagenum"); do echo "$keyword-$num.html"; done )
  videourl=$(echo "$pagenum_to_url" | while read line; do lynx -dump "$line" \
  | awk '/jizzhut\.com\/videos/ {print $2}' | awk '!x[$0]++' ; done)

  echo $videourl | awk '!x[$0]++' | vim -R -
}

fap-redtube() {
  keyword="$(echo "http://www.redtube.com/?search=$@" | sed 's/ /\+/g')"
  pagenum=3
  pagenum_to_url=$(for num in $(seq 1 "$pagenum"); do echo "$keyword&page=$num"; done )
  videourl=$(echo "$pagenum_to_url" | while read line; do lynx -source "$line" \
  | awk -F\" '/class="s"/ {print $4, "http://redtube.com"$2}' | awk '!x[$0]++' ; done)

  echo $videourl | awk '!x[$0]++' | vim -R -
}

fap-spankwire() {
  keyword="$(echo "http://www.spankwire.com/search/straight/keyword/$@" | sed 's/ /\%20/g')"
  pagenum=5
  pagenum_to_url=$(for num in $(seq 1 "$pagenum"); do echo "$keyword?Sort=Relevance&Page=$num"; done )
  videourl=$(echo "$pagenum_to_url" | while read line; do lynx -dump "$line" \
  | awk '/www\.spankwire\.com/ && /video/ {print $2}' | awk '!x[$0]++' ; done)

  echo $videourl | sed 's/\ /\n/g' | vim -R -
}

# quvi not supported anymore
fap-tnaflix() {
  keyword="$(echo "&what=$@&category=&sb=relevance&su=anytime&sd=all&dir=desc" | sed 's/ /\%20/g')"
  pagenum=3
  pagenum_to_url=$(for num in $(seq 1 "$pagenum"); do echo \
      "http://www.tnaflix.com/search.php?page=$num$keyword"; done )
  videourl=$(echo "$pagenum_to_url" | while read line; do lynx -dump "$line" \
  | awk '/video[0-9]/ {print $2}' | awk '!x[$0]++' ; done)

  echo $videourl | sed 's/\ /\n/g' | vim -R -
}
fap-empflix() {
  keyword="$(echo "&what=$@&category=&sb=relevance&su=anytime&sd=all&dir=desc" | sed 's/ /\%20/g')"
  pagenum=3
  pagenum_to_url=$(for num in $(seq 1 "$pagenum"); do echo \
      "http://www.empflix.com/search.php?page=$num$keyword"; done )
  videourl=$(echo "$pagenum_to_url" | while read line; do lynx -dump "$line" \
  | awk '/empflix\.com\/videos/ {print $2}' | awk '!x[$0]++' ; done)

  echo $videourl | sed 's/\ /\n/g' | vim -R -
}

# #}}}
#-------- Youtube-Viewer Channels {{{
#------------------------------------------------------
# tutorial video: http://www.youtube.com/watch?v=FnJ67oAxVQ4
# watch/login/comment/search/download...etc video on youtube, all from cli
# https://github.com/trizen/youtube-viewer
yt-listen() { youtube-viewer -n $@ ;}   # no video, music/audio only
# yt-music() { youtube-viewer -n --category=Music --top ;}  # show top music list
yt-music() { youtube-viewer -n --category=10 ;}   # show top music list
yts-movie-movieclipstrailer() { youtube-viewer -u UCi8e0iOVk1fEOogdfu4YgfA ;}
yts-movie-reviews() { youtube-viewer -u UCeiAKuJGZrIjYvaq0nMwbJg ;}
yts-tmkoc() { youtube-viewer -u UC54_ux4BnaJwkVFn5M391XQ ;}

## }}}

####################
##### TESTING ######
####################
#-------- Tmux Attach{{{

if command -v tmux &> /dev/null && [ -n "$PS1" ] && [[ ! "$TERM" =~ screen ]] && [[ ! "$TERM" =~ tmux ]] && [ -z "$TMUX" ] && [ ${UID} != 0 ]; then tmux new-session -A -s main; else tmux attach ; fi &> /dev/null

# }}}
