#!/usr/bin/env bash
###             _   _     _      _         
###  __ _  ___ | |_| |__ | | ___| |_ _   _ 
### / _` |/ _ \| __| '_ \| |/ _ \ __| | | |
###| (_| | (_) | |_| |_) | |  __/ |_| |_| |
### \__, |\___/ \__|_.__/|_|\___|\__|\__,_|
### |___/                                  
###       https://www.youtube.com/user/gotbletu
###       https://twitter.com/gotbletu
###       https://github.com/gotbletu
###       gotbletu@gmail.com
###
### Author          : gotbletu
### Name            : urlportal
### Version         : 0.1
### Date            : 20161221
### Description     : custom way to handle url (similar idea to xdg-open, mailcap)
### Depends On      : lynx youtube-dl task-spooler mpv urlview tmux feh plowshare streamlink curl coreutils moreutils
### Video Demo      : https://www.youtube.com/watch?v=2jyfrmBYzVQ
### Source          : https://gist.github.com/fxsjy/5465353
### References      : cirrusuk http://arza.us/paste/piper
###                 : obosob  https://github.com/michael-lazar/rtv/issues/78#issuecomment-125507472
###                 : budlabs https://www.youtube.com/watch?v=-vbr3-mHoRs
###                 :         https://github.com/budlabs/youtube/blob/master/letslinux/032-queue-files-in-mpv/openvideo
###                 : ji99 https://www.reddit.com/r/commandline/comments/920p5d/bash_script_for_queueing_youtube_links_in_mpv/

########################## CONFIG EXAMPLES ########################## {{{
# newsboat:
#     vim ~/.newsboat/config
#         browser ~/.scripts/urlportal

# rtv:
#     vim ~/.bashrc
#         export RTV_BROWSER=~/.scripts/urlportal

# w3m:
#     vim ~/.w3m/keymap
#         open url under cursor (default: Esc+Shift+M); e.g 2+Esc+Shift+M
#         keymap  e       EXTERN_LINK ~/.scripts/urlportal

# urlview:
#     vim ~/.urlview
#         COMMAND ~/.scripts/urlportal
#### }}}
########################## VARIABLE SECTION ########################## {{{
DEFAULT="$BROWSERCLI"
VIDEO_QUEUE="tsp mpv --ontop --no-focus-on-open --no-border --force-window --autofit=500x280 --geometry=-15-53 --screen=0"
# VIDEO_QUEUE_ALT="ts quvi dump "$LINK" -b quiet --exec 'mpv %u'"
VIDEO_CLIP="mpv  --ontop --no-focus-on-open --no-border --force-window --autofit=900x600 --geometry=-15+60 --screen=0"
# IMAGEGUI="feh -. -x -B black -g 900x600-15+60"
# IMAGECLI="w3m /usr/lib/w3m/cgi-bin/treat_as_url.cgi -o display_image=1 -o imgdisplay=/usr/lib/w3m/w3mimgdisplay"
# IMAGECLI="w3m -o display_image=1 -o imgdisplay=w3mimgdisplay"
# IMAGECLI="fbi"

# IMAGECLI="feh -. -B black -g 900x600+260+160"
IMAGECLI="feh -. -B black -g 1920x1080+1920+160"
# LIVEFEED='streamlink -p "mpv --cache 2048 --ontop --no-border --force-window --autofit=500x280 --geometry=-15-60"'
LIVEFEED="tsp streamlink"
DDL_PATH=~/Downloads/plowshare
DDL_QUEUE_FAST=~/.config/plowshare/queuefast.txt
#### }}}
########################## VIDEO/GIF SECTION ###################### {{{
# enable case-insensitive matching
shopt -s nocasematch
LINK="$1"
case "$LINK" in
    *bitchute.com/*)
        $VIDEO_QUEUE "$LINK"
        ;;
    *clippituser.tv/*)
        nohup $VIDEO_CLIP "$LINK" > /dev/null 2>&1 &
        ;;
    *coub.com/view/*)
        nohup $VIDEO_CLIP "$LINK" > /dev/null 2>&1 &
        ;;
    *dailymotion.com*)
        nohup $VIDEO_CLIP "$LINK" > /dev/null 2>&1 &
        ;;
    *gfycat.com/*)
        nohup $VIDEO_CLIP "${LINK/.gifv/.webm}" > /dev/null 2>&1 &
        ;;
    *giphy.com*)
        nohup $VIDEO_CLIP "$LINK" > /dev/null 2>&1 &
        ;;
    *imgur.com/*.gifv|*imgur.com/*.mp4|*imgur.com/*.webm|*imgur.com/*.gif)
        nohup $VIDEO_CLIP "$LINK" > /dev/null 2>&1 &
        ;;
    *liveleak.com/*)
        nohup $VIDEO_CLIP "$LINK" > /dev/null 2>&1 &
        ;;
    *makeagif.com/i/*)
        nohup $VIDEO_CLIP "${LINK/.gifv/.webm}" > /dev/null 2>&1 &
        ;;
    *pornhub.com/*)
        nohup $VIDEO_CLIP "$LINK" > /dev/null 2>&1 &
        ;;
    *redtube.com/*)
        nohup $VIDEO_CLIP "$LINK" > /dev/null 2>&1 &
        ;;
    *v.redd.it/*)
        nohup $VIDEO_CLIP "$LINK" > /dev/null 2>&1 &
        ;;
    *streamable.com/*)
        nohup $VIDEO_CLIP "${LINK/.gifv/.webm}" > /dev/null 2>&1 &
        ;;
    *streamja.com/*)
        nohup $VIDEO_CLIP "$LINK" > /dev/null 2>&1 &
        ;;
    *tenor.com/view/*)
        LINK="$(lynx -source "$LINK" | grep -oP '<img src="\K[^"]+' | grep '^http' | head -n1)"
        tmux new-window -n gif && tmux send-keys "chafa '$LINK' && tmux kill-pane" 'Enter'
        ;;
    *tiktok.com/*)
        nohup $VIDEO_CLIP "$LINK" > /dev/null 2>&1 &
        ;;
    *video.twimg.com/*)
        nohup $VIDEO_CLIP "$LINK" > /dev/null 2>&1 &
        ;;
    *clips.twitch.tv/*)
        $VIDEO_QUEUE "$LINK"
        ;;
    *twitch.tv/*)
        $LIVEFEED "$LINK"
        ;;
    *webmshare.com/play/*)
        LINK="$(curl -s "$LINK" | grep -oP '<meta property="og:video" content="\K[^"]+' | sed 's@^@https:@')"
        nohup $VIDEO_CLIP "$LINK" > /dev/null 2>&1 &
        ;;
    *worldstarhiphop.com/videos/*)
        nohup $VIDEO_CLIP "$LINK" > /dev/null 2>&1 &
        ;;
    *xvideos.com/*)
        nohup $VIDEO_CLIP "$LINK" > /dev/null 2>&1 &
        ;;
    *redgifs.com/*)
        nohup $VIDEO_CLIP "$LINK" > /dev/null 2>&1 &
        ;;
    *youtube.com/watch*|*youtu.be/*)
        $VIDEO_QUEUE "$LINK"
        ;;
    *nagpurtoday.in/video*)
        $VIDEO_QUEUE "$LINK"
        ;;
    *news18.com/news/ivideos/*)
        $VIDEO_QUEUE "$LINK"
        ;;
    *nytimes.com/video/*)
        $VIDEO_QUEUE "$LINK"
        ;;
    *.webp|*.webm)
        nohup $VIDEO_CLIP "$LINK" > /dev/null 2>&1 &
        ;;
    *.gif)
        nohup $VIDEO_CLIP "${LINK/.gifv/.webm}" > /dev/null 2>&1 &
        # tmux new-window -n gif && tmux send-keys "chafa '$LINK' && tmux kill-pane" 'Enter'
        ;;
    *.mp4|*.mkv|*.avi|*.wmv|*.m4v|*.mpg|*.mpeg|*.flv|*.ogm|*.ogv|*.gifv)
        $VIDEO_QUEUE "$LINK"
        ;;
#### }}}
########################## IMAGE SECTION ########################## {{{
    *22pixx.xyz/ia-*)
        LINK="$(echo "$LINK" | sed 's/ia-//g' | sed 's/\.html//g')"
        $IMAGECLI $LINK
        ;;
    *bitpic.me/v/*)
        LINK="$(lynx -source "$LINK" | grep -oP '<img src="\K[^"]+' | tail -n1 | while read -r line; do echo "https://bitpic.me/$line"; done)"
        $IMAGECLI $LINK
        ;;
    *blameless.work/img*)
        LINK="$(curl --data "imgContinue=Continue to image ..." --location "$LINK" | grep centred | grep -oP 'src=\047\K[^\047]+')"
        $IMAGECLI $LINK
        ;;
    *blameless.work/upload/small/*)
        LINK="${LINK/small/big}"
        $IMAGECLI $LINK
        ;;
    *damimage.com/img*)
        LINK="$(curl -s "$LINK" | grep centred | grep -oP 'src=\047\K[^\047]+')"
        $IMAGECLI $LINK
        ;;
    *dimtus.com/img*)
        LINK="$(curl -s "$LINK" | grep centred | grep -oP 'src=\047\K[^\047]+')"
        $IMAGECLI $LINK
        ;;
    *discountxpic.xyz/img*)
        LINK="$(curl --data "imgContinue=Continue to image ..." --location "$LINK" | grep centred | grep -oP 'src=\047\K[^\047]+')"
        $IMAGECLI $LINK
        ;;
    *discountxpic.xyz/upload/small/*)
        LINK="${LINK/small/big}"
        $IMAGECLI $LINK
        ;;
    *.fastpic.ru/big/*)
        $IMAGECLI $LINK
        ;;
    *erophotopixxx.com/*.html)
        LINK="$(curl -s "$LINK" |  grep '<img class' | head -n1 |  grep -oP 'src="\K[^"]+' | while read -r line; do echo "https://erophotopixxx.com$line"; done)"
        $IMAGECLI $LINK
        ;;
    *trans.firm.in//img*)
        LINK="$(curl -s "$LINK" | grep centred | grep -oP 'src=\047\K[^\047]+')"
        $IMAGECLI $LINK
        ;;
    *trans.firm.in//upload/small/*)
        LINK="${LINK/small/big}"
        $IMAGECLI $LINK
        ;;
    *freebunker.com/*)
        LINK="${LINK/img\//tn\/i}"
        $IMAGECLI $LINK
        ;;
    *freescreens.ru/allimage/*)
        LINK="${LINK/-thumb/}"
        $IMAGECLI $LINK
        ;;
    *freescreens.ru/*)
        LINK="$(echo "$LINK/1/" | sed 's/freescreens.ru/picpic.online/')"
        $IMAGECLI $LINK
        ;;
    *funimg.net/img*)
        LINK="$(curl --data "imgContinue=Click here to view image" --location "$LINK" | grep -oP 'var linkid="\K[^"]+' | while read -r line; do curl -s "$line" ; done | grep -oP 'src="\K[^"]+' | grep upload )"
        $IMAGECLI $LINK
        ;;
    *hdmoza.com//upload/small/*)
        LINK="${LINK/small/big}"
        $IMAGECLI $LINK
        ;;
    *hotimage.uk/img*)
        # LINK="$(curl --data "imgContinue=Continue to image ..." --location "$(echo $LINK | sed 's@http://@https://www.@')" | grep centred | grep -oP 'src=\047\K[^\047]+')"
        LINK="$(curl --data "imgContinue=Continue to image ..." --location "${LINK/http:\/\//https:\/\/www.}" | grep centred | grep -oP 'src=\047\K[^\047]+')"
        $IMAGECLI $LINK
        ;;
    *hotimage.uk/upload/small/*)
        LINK="${LINK/small/big}"
        $IMAGECLI $LINK
        ;;
    *hotsic.ru/img*)
        LINK="$(curl --data "imgContinue=Click To View The Image ... " --location "$LINK" | grep centred | grep -oP 'src=\047\K[^\047]+')"
        $IMAGECLI $LINK
        ;;
    *pic.hotimg.site/img*)
        LINK="$(curl -s "$LINK" | grep centred | grep -oP 'src=\047\K[^\047]+')"
        $IMAGECLI $LINK
        ;;
    *ibb.co/*)
        LINK="$(lynx -listonly -nonumbers -dump "$LINK" | grep image)"
        $IMAGECLI $LINK
        ;;
    *imagebam.com/image/*)
        LINK="$(lynx -source "$LINK" | grep -oP '<meta property="og:image" content="\K[^"]+')"
        $IMAGECLI $LINK
        ;;
    *imagecurl.com/viewer.php?file=*)
        LINK="$(echo "$LINK" | sed 's@https://@https://cdn.@' | sed 's@/viewer.php?file=@/images/@')"
        $IMAGECLI $LINK
        ;;
    *imagedecode.com/img*)
        LINK="$(curl -s "$LINK" | grep centred | grep -oP 'src=\047\K[^\047]+')"
        $IMAGECLI $LINK
        ;;
    *imagedecode.com/upload/small/*)
        LINK="${LINK/small/big}"
        $IMAGECLI $LINK
        ;;
    *imagehub.pro/img*)
        LINK="$(curl -s "$LINK" | grep centred | grep -oP 'src=\047\K[^\047]+')"
        $IMAGECLI $LINK
        ;;
    *imagerar.com/t/*)
        LINK="${LINK/\/t/\/u}"
        $IMAGECLI $LINK
        ;;
    *imagerar.com/imgy-u/*)
        LINK="$(echo "$LINK" | sed 's/imgy-u/u/g' | sed 's/.html//g')"
        $IMAGECLI $LINK
        ;;
    *imagescomplete.xyz/image/*)
        LINK="$(lynx -source "$LINK" | grep embed-code-2 | grep -oP 'value="\K[^"]+')"
        $IMAGECLI $LINK
        ;;
    *imageshtorm.com/img*)
        LINK="$(curl -s "$LINK" | grep onclick | grep -oP '<a href=\047\K[^\047]+')"
        $IMAGECLI $LINK
        ;;
    *imageshtorm.com/upload/small/*)
        LINK="${LINK/small/big}"
        $IMAGECLI $LINK
        ;;
    *imagespublic.tk/img*)
        LINK="$(lynx -source "$LINK" | grep -oP '<img src=\047\K[^\047]+' | sed 's/small/big/')"
        $IMAGECLI $LINK
        ;;
    *imageteam.org/*)
        LINK="$(curl -s "$LINK" | grep centred | grep -oP 'src=\047\K[^\047]+')"
        $IMAGECLI $LINK
        ;;
    */imagetwist.com/*)
        LINK="$(curl -s "$LINK" | grep -oP '<p style="display: block; text-align:center;"><img src="\K[^"]+')"
        $IMAGECLI $LINK
        ;;
    *imageuploads.co.uk/image/*)
        LINK="$(lynx -source "$LINK" | grep image-viewer-container | grep -oP '<img src="\K[^"]+' | sed 's@\.md@@')"
        $IMAGECLI $LINK
        ;;
    *img-central.com/*)
        LINK="$(lynx -source "$LINK" | grep -oP '<meta property="og:image" content="\K[^"]+')"
        $IMAGECLI $LINK
        ;;
    *img2share.com/*)
        LINK="$(curl -s "$LINK" | grep centred | grep -oP 'src=\047\K[^\047]+')"
        $IMAGECLI $LINK
        ;;
    *imgadult.com/img*)
        LINK="$(curl -s "$LINK" | grep -oP '<meta property="og:image" content="\K[^"]+' | sed 's/small/big/')"
        $IMAGECLI $LINK
        ;;
    *imgbox.com/*)
        LINK="$(curl -s "$LINK" | grep -oP '<meta property="og:image" content="\K[^"]+')"
        $IMAGECLI $LINK
        ;;
    *imgclick.ru/allimage/*)
        LINK="${LINK/-thumb/}"
        $IMAGECLI $LINK
        ;;
    *imgcris.com/*)
        LINK="$(lynx -listonly -nonumbers -dump "$LINK" | grep images)"
        $IMAGECLI $LINK
        ;;
    *imgdone.com/image/*)
        LINK="$(lynx -source "$LINK" | grep -oP '<meta property="og:image" content="\K[^"]+')"
        $IMAGECLI $LINK
        ;;
    *imgflip.com/i/*)
        LINK="$(lynx -source "$LINK" | grep -oP '<meta property="og:image" content="\K[^"]+')"
        $IMAGECLI $LINK
        ;;
    *i.imghost.top/image/*)
        LINK="$(lynx -source "$LINK" | grep -oP '<meta property="og:image" content="\K[^"]+')"
        $IMAGECLI $LINK
        ;;
    *imgjazz.com/img*)
        LINK="$(curl --data "imgContinue=Continue to image ..." --location "$LINK" | grep centred | grep -oP 'src=\047\K[^\047]+')"
        $IMAGECLI $LINK
        ;;
    *imgmak.com/image*)
        LINK="$(curl -s "$LINK" | grep -oP '<img src="\K[^"]+')"
        $IMAGECLI $LINK
        ;;
    *new.imgmercy.com/image/*)
        LINK="$(lynx -source "$LINK" | grep image-viewer-container | grep -oP '<img src="\K[^"]+' | sed 's@\.md@@')"
        $IMAGECLI $LINK
        ;;
    *imgpeak.com/*)
        LINK="$(curl -s "$LINK" | grep centred | grep -oP 'src=\047\K[^\047]+')"
        $IMAGECLI $LINK
        ;;
    *imgstudio.org/img*)
        LINK="$(curl -s "$LINK" | grep centred | grep -oP 'src=\047\K[^\047]+')"
        $IMAGECLI $LINK
        ;;
    *imgtornado.com/img*)
        LINK="$(curl --data "imgContinue=Continue to image ..." --location "$LINK" | grep centred | grep -oP 'src=\047\K[^\047]+')"
        $IMAGECLI $LINK
        ;;
    *i.imgur.com/*| *imgur.com/*.*)
        $IMAGECLI $LINK
        ;;
# imgur multi links album/gallery (e.g https://imgur.com/a/5DhTEXV )
    *imgur.com/*)
        LINK="(lynx -source "$(echo $LINK | cut -d'#' -f1)" | grep post-image-container | grep -oP '<div id=\"\K[^\"]+' | while read line; do echo '%s\n' https://i.imgur.com/"\$line".png; done | urlview)"
        $IMAGECLI $LINK
        ;;
    *imguur.pictures/thumb-*)
        LINK="${LINK/thumb-/image-}"
        $IMAGECLI $LINK
        ;;
    *imguur.pictures/share-*)
        LINK="$(echo "$LINK" | sed 's/share-/image-/' | sed 's/html/jpg/')"
        $IMAGECLI $LINK
        ;;
    *instagram.com/p/*)
        LINK="$(curl -s "$LINK" | grep -oP '<meta property="og:image" content="\K[^"]+')"
        $IMAGECLI $LINK
        ;;
    *money-pic.ru/allimage/*)
        LINK="${LINK/-thumb/}"
        $IMAGECLI $LINK
        ;;
    *money-pic.ru/*)
        LINK="$(curl -s "$LINK/1/" | grep allimage | grep -oP '<img src="\K[^"]+')"
        $IMAGECLI $LINK
        ;;
    *mstimg.com/image/*)
        LINK="$(lynx -source "$LINK" | grep -oP '<meta property="og:image" content="\K[^"]+')"
        $IMAGECLI $LINK
        ;;
    *nikapic.ru/upload/small/*)
        LINK="${LINK/small/big}"
        $IMAGECLI $LINK
        ;;
    *i.nmfiles.com/image/*)
        LINK="$(lynx -source "$LINK" | grep -oP '<meta property="og:image" content="\K[^"]+')"
        $IMAGECLI $LINK
        ;;
    *orangepics.xyz/image/*)
        LINK="$(lynx -source "$LINK" | grep embed-code-2 | grep -oP 'value="\K[^"]+')"
        $IMAGECLI $LINK
        ;;
    *picforall.ru/allimage/*)
        LINK="${LINK/-thumb/}"
        $IMAGECLI $LINK
        ;;
    *picforall.ru/*)
        LINK="$(lynx -source "$LINK" | grep -oP '<img src="\K[^"]+' | grep "thumb" |sed 's/-thumb//')"
        $IMAGECLI $LINK
        ;;
    *picfuture.com/*)
        LINK="$(curl -s "$LINK" | grep centred | grep -oP 'src=\047\K[^\047]+')"
        $IMAGECLI $LINK
        ;;
    *picmoza.com//img*)
        LINK="$(curl --data "imgContinue=Continue to image ..." --location "$LINK" | grep centred | grep -oP 'src=\047\K[^\047]+')"
        $IMAGECLI $LINK
        ;;
    *pixcloud.ru/view*)
        LINK="$(curl -s "$LINK" | grep -oP '<img id="photo" src="\K[^"]+')"
        $IMAGECLI $LINK
        ;;
    *placeimg.net/img*)
        LINK="$(curl --data "imgContinue=Continue to image ..." --location "$LINK" | grep centred | grep -oP 'src=\047\K[^\047]+')"
        $IMAGECLI $LINK
        ;;
    *pornweb.xyz/*)
        LINK="$(curl -s "$LINK" | grep imagebam | grep -oP '<p><img src="\K[^"]+')"
        $IMAGECLI $LINK
        ;;
    *pornyfap.com/pic/*)
        LINK="$(curl -s "$LINK" | grep myImg | grep -oP 'src=\047\K[^\047]+')"
        $IMAGECLI $LINK
        ;;
    *tk.imgsking.com/img-*)
        LINK="$(lynx -source "$LINK" | grep center | grep -oP '<img src="\K[^"]+')"
        $IMAGECLI $LINK
        ;;
    *pornbaker.men/image/*)
        LINK="$(lynx -source "$LINK" | grep image-viewer-container | grep -oP '<img src="\K[^"]+' | sed 's@\.md@@')"
        $IMAGECLI $LINK
        ;;
    *proimg.site/image/*)
        LINK="$(lynx -source "$LINK" | grep image-viewer-container | grep -oP '<img src="\K[^"]+' | sed 's@\.md@@')"
        $IMAGECLI $LINK
        ;;
    *putaimage.info/image/*)
        LINK="$(lynx -source "$LINK" | grep -oP '<meta property="og:image" content="\K[^"]+')"
        $IMAGECLI $LINK
        ;;
    *trafficimage.club/image/*)
        LINK="$(lynx -source "$LINK" | grep image-viewer-container | grep -oP '<img src="\K[^"]+' | sed 's@\.md@@')"
        $IMAGECLI $LINK
        ;;
    *pbs.twimg.com/*)
        LINK="$LINK"
        # LINK="$(lynx -source "$LINK" | grep -oP '<img src="\K[^"]+' | sed 's@small@big@' )"
        $IMAGECLI $LINK
        ;;
    *ubapacola.xyz/img-*)
        LINK="$(curl -s "$LINK" | grep centred | grep -oP 'src=\047\K[^\047]+')"
        $IMAGECLI $LINK
        ;;
    *unporn.site/img*)
        LINK="$(lynx -source "$LINK" | grep -oP '<img src="\K[^"]+' | sed 's@small@big@' )"
        $IMAGECLI $LINK
        ;;
    *wallpaperspic.pw/*)
        LINK="$(curl -s "$LINK" | grep imagebam | grep -oP '<p><img src="\K[^"]+')"
        $IMAGECLI $LINK
        ;;
    *xaoutchouc.live/img*)
        LINK="$(lynx -source "$LINK" | grep -oP '<img src=\047\K[^\047]+' | sed 's/small/big/')"
        $IMAGECLI $LINK
        ;;
    *xxximagetpb.org/*)
        LINK="$(lynx -source "$LINK" | grep -oP '<meta property="og:image" content="\K[^"]+')"
        $IMAGECLI $LINK
        ;;
    *xxxwebdlxxx.org/img*)
        LINK="$(curl --data "imgContinue=Continue to image ..." --location "$LINK" | grep centred | grep -oP 'src=\047\K[^\047]+')"
        $IMAGECLI $LINK
        ;;
    *.jpg|*.jpeg|*.png|*:large)
        $IMAGECLI $LINK
        ;;
#### }}}
########################## AUDIO SECTION ########################## {{{
    *internet-radio.com/*.pls|*internet-radio.com/*.m3u)
        LINK=$(echo "$LINK" | cut -d'=' -f2- | cut -d'&' -f1)
        cmus-remote -c -q && cmus-remote -q "$LINK" && cmus-remote -n -p
        ;;
    *.pls|*.m3u)
        tmux split-window -fv -p 20 && tmux send-keys "mpv '$LINK' && exit" 'Enter'
        ;;
    *.mp3|*.m4a|*.wav|*.ogg|*.oga|*.flac)
        # create queue fifo files if it does not exist
        if [[ ! -p /tmp/mpvinput ]]; then
            mkfifo /tmp/mpvinput
        fi

        # check if process mpv exist (e.g mpv --input-file=/tmp/mpvinput filename.mp3)
        if pgrep -f mpvinput > /dev/null
        then
            # if mpv is already running then append new url/files to queue
            # echo loadfile \"${LINK/'/\\'}\" append-play > /tmp/mpvinput
            echo loadfile \"$LINK\" append-play > /tmp/mpvinput
        # nohup $VIDEO_CLIP "${LINK/.gifv/.webm}" > /dev/null 2>&1 &
        else
            # if mpv is not running then start it (initial startup)
            # mpv --no-video --input-file=/tmp/mpvinput "$1"
            tmux split-window -fv -p 20 && tmux send-keys "mpv --no-video --input-file=/tmp/mpvinput \"$LINK\" && exit" 'Enter'
        fi
        # Note: use "<" or ">" hotkeys to skip between songs/audio queue list on mpv
        ;;
#### }}}
########################## OTHER SECTION ########################## {{{

# reddit comments
    *reddit.com/r/*/comments/*)
        rtv -l $LINK
        ;;
# reddit subreddit or user
    *reddit.com/r/*|*reddit.com/u/*|*reddit.com/user/*)
        LINK="$(echo "$LINK" | awk -F '.com' '{print $2}')"
        rtv -s $LINK
        ;;
# cyberlocker download without captcha code
    *zippyshare.com/*|*mediafire.com/file/*|*sendspace.com/file/*)
        if pgrep -f $DDL_QUEUE_FAST > /dev/null
        then
            echo "$LINK" >> $DDL_QUEUE_FAST
        else
            echo "$LINK" >> $DDL_QUEUE_FAST
            cat $DDL_QUEUE_FAST | awk '!x[$0]++' | sponge $DDL_QUEUE_FAST
            tmux split-window -fv -p 20 && tmux send-keys "until [[ \$(cat $DDL_QUEUE_FAST | grep -v '#' | wc -l) -eq 0 ]]; do mkdir -p $DDL_PATH && cd $DDL_PATH && plowdown -m $DDL_QUEUE_FAST -o $DDL_PATH ; done" 'Enter'
        fi
        ;;
    *.cbz|.cbr)
        mcomix "$LINK"
        ;;
# irc xdcc downloader
    *ixirc.com/?pid*)
        # install requirements: https://git.sr.ht/~dax/xdcc
        # $ xdcc -s irc.example.org -c channel_name -b bot_name pack_number
        LINK=$(curl -s "$LINK")
        server=$(echo "$LINK" | grep -oP '<td><a href="\K[^"]+' | cut -d'/' -f3 | cut -d':' -f1)
        port=$(echo "$LINK" | grep -oP '<td><a href="\K[^"]+' | cut -d':' -f3 | cut -d'/' -f1)
        channel_name=$(echo "$LINK" | grep -oP '<td><a href="\K[^"]+' | cut -d'/' -f4)
        bot_name=$(echo "$LINK" | grep msg | grep -oP 'value="\K[^"]+' |cut -d' ' -f2)
        package_number=$(echo "$LINK" | grep msg | grep -oP 'value="\K[^"]+' |cut -d' ' -f5 | cut -d'#' -f2)
        tmux split-window -fv -p 30 && tmux send-keys "cd ~/Downloads && xdcc -y -v -s $server -p $port -c $channel_name -b \"$bot_name\" $package_number" 'Enter'
        ;;
    mailto:*)
        tmux split-window -fv && tmux send-keys "mutt -- '$LINK' && tmux kill-pane" 'Enter'
        ;;
    magnet:*|*.torrent)
        transmission-remote -a "$LINK"
        ;;
    *.nfo)
        tmux new-window -n view && tmux send-keys "vim '$LINK' && tmux kill-pane" 'Enter'
        ;;
    *thelocal.se/*)
        $DEFAULT -no-cookie $LINK
        ;;
    *.html)
        $DEFAULT $LINK
        ;;
    *)
        $DEFAULT $LINK
        ;;
#### }}}

########################## EMPTY SECTION ########################## {{{
#### }}}
########################## EMPTY SECTION ########################## {{{
#### }}}
########################## EMPTY SECTION ########################## {{{
esac
#### }}}
